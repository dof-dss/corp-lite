<?php

/**
 * @file
 * Functions to support theming in the hseni_theme.
 */

use Drupal\block\Entity\Block;
use Drupal\nicsdru_corplite_theme\LayoutClasses;
use Drupal\node\NodeInterface;

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function hseni_theme_preprocess_page(array &$variables) {
  // Process node pages.
  if (!empty($variables['node'])) {
    $node = $variables['node'];

    if (method_exists($node, 'bundle')) {
      switch ($node->bundle()) {
        // Specific node types have a main and aside.
        case "news":
        case "page":
          $variables['main_content_attr']->addClass(LayoutClasses::MAIN_SIDE);
          $variables['sidebar_second_attr']->addClass('ga-aside');
          break;

        // All the rest have a main with a limited width.
        default:
          $variables['main_content_attr']->addClass(LayoutClasses::MAIN_LIMITED);
          break;
      }
    }
  }

  // Process search view pages.
  $viewpage = \Drupal::routeMatch()->getParameter('view_id');

  // Will need bits and pieces from the request.
  $request = \Drupal::request();

  if (!empty($viewpage)) {
    switch ($viewpage) {
      case "publication_search":
        $variables['main_content_attr']->addClass(LayoutClasses::SIDE_MAIN);
        $variables['sidebar_first_attr']
          ->addClass('ga-aside')
          ->setAttribute('role', 'search')
          ->setAttribute('aria-roledescription', t('search publications'));
        break;

      case "news_search":
        $variables['main_content_attr']->addClass(LayoutClasses::SIDE_MAIN);
        $variables['sidebar_first_attr']
          ->addClass('ga-aside')
          ->setAttribute('role', 'search')
          ->setAttribute('aria-roledescription', t('search news'));
        break;

      case "search":
        $variables['main_content_attr']->addClass(LayoutClasses::MAIN_LIMITED);
        if ($variables['content_wrapper_attr'] instanceof Attribute) {
          $variables['content_wrapper_attr']
            ->addClass(['ga-main', 'search-content'])
            ->setAttribute('role', 'presentation');
        }
    }
  }

  if (isset($variables['is_front']) && $variables['is_front'] == TRUE) {
    $front_classes = ['grid', 'layout--front'];
    $variables['main_content_attr']->addClass($front_classes);
    $variables['sidebar_second_attr']->addClass('section--popular');
  }
}

/**
 * Implements hook_preprocess_field().
 */
function hseni_theme_preprocess_field(&$variables) {
  if ($variables['element']['#field_name'] === 'field_featured_content' && \Drupal::service('path.matcher')
      ->isFrontPage()) {
    // Only show 3 items on the homepage.
    if (count($variables['items']) > 3) {
      $variables['items'] = array_slice($variables['items'], 0, 3);
    }

    // If we're rendering this field on the front page, see if the parent object
    // id matches the node id defined for the feature COVID-19 FCL node. If it
    // does then we want to add a preprocess variable to let us hide the teaser
    // field which saves having to define a whole new set of view modes + config
    // for a really small trivial change to the way the feature nodes render.
    $block = Block::load('featuredcontent');
    $covid_fcl_nid = $block->get('settings')['featured_items'];
    $parent = &$variables['element']['#object'];

    if ($parent instanceof NodeInterface && $parent->id() == $covid_fcl_nid) {
      foreach ($variables['items'] as $key => &$feature_node) {
        $feature_node['content']['#exclude_fields'] = ['field_teaser'];
        // Set custom field_photo image style.
        //$feature_node['content']['#photo_image_style'] = 'article_full';
      }
    }
  }
}

/**
 * Implements hook_preprocess_node().
 */
function hseni_theme_preprocess_node(array &$variables) {
  switch ($variables['node']->getType()) {
    case "feature":
      // Unset any fields which have a specific preprocess variable.
      // See nicsdru_nidirect_theme_preprocess_field() for an example.
      if (!empty($variables['elements']['#exclude_fields'])) {
        foreach ($variables['elements']['#exclude_fields'] as $field_id) {
          unset($variables['content'][$field_id]);
        }
      }

      if (isset($variables['elements']['#photo_image_style'])) {
        // Some features use a different image style, eg: top set
        // of featured content on the homepage.
        $variables['content']['field_photo'][0]['#view_mode'] = $variables['elements']['#photo_image_style'];
      }
      break;

    case "featured_content_list":
      // Only show the title on the canonical node route.
      if (\Drupal::routeMatch()->getRouteName() !== 'entity.node.canonical') {
        $variables['show_title'] = FALSE;
      }

      break;
  }
}
