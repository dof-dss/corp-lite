{"version":3,"sourceRoot":"","sources":["../../../../../../../web/themes/custom/nicsdru_corplite_theme/src/scss/init/_variables.scss","../../src/scss/1_base/root.scss","../../../../../../../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss"],"names":[],"mappings":"AAQA;AAiBA;AAQA;AAkBA;ACjDA;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EAiBA;EAEA;;ACQE;ED9DJ;IAsCI;IACA;IACA;;;ACsBA;ED9DJ;IA4CI;IACA;IACA","file":"root.css","sourcesContent":["// Variables\n//\n// Set variables for this site. These can be overridden in the scss code later.\n//\n// Weight: -9\n//\n// Style guide: init.variables\n\n/* Vertical rhythm presets =========================================== */\n// The font size set on the root html element.\n$base-font-size: 10px;\n\n// The base line height determines the basic unit of vertical rhythm.\n$base-line-height: 6px;\n\n// The length unit in which to output vertical rhythm values.\n// Supported values: px, em, rem.\n$rhythm-unit: 'rem';\n\n// Whether to output fallback values in px when using rem as the rhythm-unit.\n$rem-with-px-fallback: false;\n\n// Round the line height to the nearest half line height instead of the nearest integral line height.\n$round-to-nearest-half-line: true;\n\n/* Set the base images folder */\n// The relative path from the build directory, css/, to\n// the source directory, images/\n$image-url-path-to-source: '../' !default;\n\n// The relative path from the root sass directory to where your components usually lie.\n$image-url-subdirectory: 'images' !default;\n\n/* Breakpoints ======================================================== */\n$phone: 480px;\n$phab: 576px;\n$tab: 768px;\n$lap: 992px;\n$desk: 1200px;\n$desk-plus: 1679px;\n\n$grid-breakpoints: (\n  xs: 0,\n  sm: $phone,\n  md: $phab,\n  lg: $tab,\n  xl: $lap,\n  xxl: $desk,\n  xxxl: $desk-plus,\n) !default;\n\n/* Layout max widths for larger breakpoints =========================== */\n$max-grid-width: 1140px;\n$max-content-width: 76rem; // Apply to content in single column page layouts.\n$max-body-text-width: 64rem; // Apply to content containers containing normal sized text.\n\n$grid-gap: 2.4rem;\n$tab-grid-gap: 2.7rem;\n$grid-gap-lg: $tab-grid-gap;\n$lap-grid-gap: 36px;\n$desk-grid-gap: 45px;\n\n$total-columns: 1140;\n$article-max-width: 750px;\n$aside-max-width: 360px;\n$article-grid-max-width: 750fr;\n$aside-grid-max-width: 360fr;\n$article-float-max-width: 65.789%;\n$aside-float-max-width: 31.579%;\n\n// The amount lists, blockquotes and comments are indented.\n$indent-amount: 1em;\n\n\n// Font faces, stacks and sizes.\n//\n// Font styling and line heights are controlled by the several variables that\n// used by mixins like adjust-font-size-to().\n// These variable and mixins are documented in [Compass](http://compass-style.org/reference/compass/typography/vertical_rhythm/).\n// We also use a custom mixin responsive-typo-map() to make responsive typography much more manageable using sass maps.\n// We import Google fonts in the head of the document and set the base family to include\n// 'Open Sans', sans-serif\n//\n// Style guide: init.variables.typography\n// The default font family.\n$base-font-family: 'Roboto', 'Open Sans', sans-serif;\n$font-monospace: 'Courier New', 'DejaVu Sans Mono', monospace, sans-serif;\n","@use '../../../../../../../../web/themes/custom/nicsdru_corplite_theme/src/scss/init' as *;\n\n:root {\n  // Color custom properties\n  --clr-black: #000;\n  --clr-charcoal: #333;\n  --clr-grey: #949494;\n  --clr-grey-medium: #666;\n  --clr-grey-dark: #4d4d4d;\n  --clr-grey-light: #e8e7e7;\n  --clr-grey-lightest: #e8e7e7;\n  --clr-tangaroa: #041e34;\n  --clr-white: #fff;\n  --clr-body-text: #222;\n  --clr-mark-bkgd: #ff0;\n  --clr-heading-text: #19315a;\n  --clr-body-bkgd: #fff;\n  --clr-link: #0e6bb3;\n  --clr-link-visited: #5e60b5;\n  --clr-link-hover: #0e6bb3;\n  --clr-link-active: #d1431f;\n  --clr-border: #e8e7e7;\n  --clr-table-border: #666;\n  --clr-button: #666;\n  --clr-button-action: #048a05;\n  --clr-button-danger: #d1431f;\n  --clr-button-disabled: #e8e7e7;\n  --clr-button-primary: #0a78cd;\n  --clr-button-secondary: #154365;\n  --clr-button-warning: #bf5803;\n  --clr-brand-primary: #00aae5;\n  --clr-brand-primary-light: #cee4f6;\n  --clr-brand-secondary: #0b1647;\n\n  // Typography and rhythm spacing custom properties\n  --fs-base-size: 1.6rem;\n  --base-rhythm: .8rem;\n  --base-rhythm-frag: .2rem;\n\n  @include breakpoint($lap) {\n    --fs-base-size: 1.8rem;\n    --base-rhythm: .9rem;\n    --base-rhythm-frag: .3rem;\n  }\n\n  @include breakpoint($desk-plus) {\n    --fs-base-size: 2rem;\n    --base-rhythm: 1rem;\n    --base-rhythm-frag: .5rem;\n  }\n\n  //--rhythm-spacing-xs: var(--base-rhythm-frag); // 2, 3, 5\n  //--rhythm-spacing-sm: var(--base-rhythm); // 8, 9, 10\n  //--rhythm-spacing-md: calc(var(--base-rhythm) + var(--base-rhythm-frag)); // 10, 12, 15\n  --rhythm-spacing: calc(var(--base-rhythm) * 2); // 16, 18, 20\n  //--rhythm-spacing-lg: calc(var(--base-rhythm) * 2 + var(--base-rhythm-frag)); // 18, 21, 25\n  --rhythm-spacing-xl: calc(var(--base-rhythm) * 3); // 24, 27, 30\n  //--rhythm-spacing-xxl: calc(var(--base-rhythm) * 4); // 32, 36, 40\n  //--rhythm-spacing-xxxl: calc(var(--base-rhythm) * 5); // 40, 45, 50\n}\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n"]}