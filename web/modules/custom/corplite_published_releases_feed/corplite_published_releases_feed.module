<?php

/**
 * @file
 * Contains corplite_published_releases_feed.module.
 */

use Drupal\corplite_published_releases_feed\Entity\PublishedReleases;

/**
 * Cron callback function to run feed.
 */
function corplite_published_releases_feed_import() {
  $data = corplite_published_releases_feed_fetch_feed();
  $updated = 0;
  $imported = 0;
  foreach ($data as $feed_item) {
    $release = PublishedReleases::Load($feed_item['id']);
    if (!empty($release)) {
      // Published release exists, see if we need to update it.
      if (strtotime($feed_item['updated']) > $release->updated->getString()) {
        // Update the published release.
        corplite_published_releases_feed_update_release_object($release, $feed_item);
        $updated++;
      }
      else {
        // Published release has not changed, do nothing.
      }
    }
    else {
      // Published release does not exist in the database, so store it.
      $release = PublishedReleases::create(['id' => $feed_item['id']]);
      corplite_published_releases_feed_update_release_object($release, $feed_item);
      $imported++;
    }
  }
  \Drupal::logger('corplite_published_releases_feed')->notice("Nisra published releases feed - imported " . $imported . ", updated " . $updated);
}

/**
 * Update the release object.
 */
function corplite_published_releases_feed_update_release_object($release, $feed_item) {
  $release->set('title', $feed_item['title']);
  $release->set('summary', $feed_item['summary']);
  $release->set('url', $feed_item['url']);
  $release->set('release_date', strtotime($feed_item['release_date']));
  $release->set('updated', strtotime($feed_item['updated']));
  $release->save();
}

/**
 * Retrieve the JSON feed.
 */
function corplite_published_releases_feed_fetch_feed() {
  $data = NULL;
  $client = \Drupal::service('http_client');
  $config = \Drupal::config('corplite_published_releases_feed.settings');
  $url = $config->get('data_source_url');

  try {
    $response = $client->get($url);

    if ($response->getStatusCode() == 200) {
      $feed_contents = $response->getBody()->getContents();
      $feed_contents = json_decode($feed_contents, TRUE);

      $data = [];
      foreach ($feed_contents['entries'] as $row) {
        if (!empty($row['id'])) {
          $data[] = [
            'id' => (string) $row['id'],
            'title' => (string) !empty($row['title']) ? $row['title'] : '',
            'summary' => (string) !empty($row['summary']) ? $row['summary'] : '',
            'url' => (string) !empty($row['url']) ? $row['url'] : '',
            'release_date' => (string) !empty($row['release_date']) ? $row['release_date'] : '',
            'updated' => (string) !empty($row['updated']) ? $row['updated'] : '',
          ];
        }
      }
    }
  }
  catch (Exception $e) {
    \Drupal::logger('corplite_published_releases_feed')->error($e);
  }
  return $data;
}

/**
 * Implements hook_facets_search_api_query_type_mapping_alter().
 */
function corplite_published_releases_feed_facets_search_api_query_type_mapping_alter($backend_plugin_id, array &$query_types) {
  $query_types['example'] = 'now_future_dates';
}
