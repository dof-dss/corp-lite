/*
 * @file
 * Provides the layout styles for the main nav.
 */
@use '../../init' as *;

$link-main-menu: (
  color: '#fff',
  background-color: (
    default: transparent,
  ),
  text-decoration: (
    default: none,
    focus: underline 2px,
    hover: underline 2px
  ),
  text-underline-offset: (
    default: none,
    focus: 4px,
    hover: 4px,
  ),
  box-shadow: (
    default: none,
  ),
  outline: (
    default: 0,
    visited: 0,
  ),
  outline-offset: -.5em,
) !default;
$link-main-menu-horizontal: (
  color: (
    default: var(--clr-link),
  ),
  background: (
    default: transparent,
  ),
  outline: none,
  text-decoration: (
    default: none,
    focus: underline 3px,
    hover: underline 3px,
  ),
  text-underline-offset: (
    default: auto,
    focus: 5px,
    hover: 5px,
  )
) !default;
$link-main-menu-social: (
  outline: (
    default: '0 solid transparent',
    focus: '3px solid #fff',
    hover: '3px solid #fff',
    active: 0
  ),
  transition: 'outline-color .3s',
  text-decoration: none
) !default;
$link-main-menu-active: (
  outline: 2px solid,
) !default;
$link-main-menu-horizontal-active: (
  color: '#fff',
  background: var(--clr-main-nav-border),
  outline: none,
) !default;

.main-menu {
  background-color: var(--clr-main-nav-bkgd);
  position: relative;

  .nav {
    &-main {
      display: flex;
      flex-flow: column nowrap;
      padding: 1rem 0;

      @include breakpoint($tab) {
        flex-flow: row wrap;
        justify-content: space-between;
        align-items: center;
        max-width: $max-grid-width;
        margin: 0 auto;
        padding: 0;
      }
    }

    &-menu {
      width: 100%;
      margin: 0;
      padding: 0;

      @include breakpoint($tab) {
        border-bottom: 2px solid var(--clr-main-nav-border);
        display: flex;
        width: auto;
      }
    }

    &-link, &-item .active {
      @include link-state-style($link-main-menu);

      display: block;
      padding: 1em 1.6rem;

      @include breakpoint($tab) {
        @include link-state-style($link-main-menu-horizontal);

        font-size: 1.6rem;
        line-height: 2.7rem;
        padding: 0.9rem 1.2rem;
        margin-right: 3px;

        // IE fix.
        // IE does not support outline-offset. So just remove the outline.
        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
          position: relative;
          outline: none !important;

          &::after {
            content: '';
            display: block;
            width: calc(100% - 16px);
            height: calc(100% - 16px);
            position: absolute;
            left: 8px;
            top: 8px;
          }

          &:hover::after,
          &:focus::after {
            border: 3px solid #fff;
          }
        }
      }

      @include breakpoint($lap) {
        font-size: 1.8rem;
        padding: 0.5em 1.5rem;
      }
    }

    &-item .active {
      @include link-state-style($link-main-menu-active);

      @include breakpoint($tab) {
        @include link-state-style($link-main-menu-horizontal-active)
      }
    }
  }

  .hamburger {
    // The hamburger should use a button element for semantics.
    // Set appearance to none and remove some default styling browsers add for buttons.
    appearance: none;
    border: 0;
    width: 4.5rem;
    height: 4.5rem;
    padding: 1rem;
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    color: #fff;

    &:focus {
      outline: none;
    }

    &:focus-visible {
      outline: 3px solid #fff;
      outline-offset: -3px;
    }

    // By default the hamburger has the hidden attribute applied.
    // If JS is enabled, the hidden attribute is removed.
    // @see src/js/main-menu-toggle.js
    // @see templates/block/block--mainnavigation.html.twig.
    &[hidden] {
      display: none;
    }

    // Don't display the hamburger on larger screens.
    @include breakpoint($tab) {
      display: none;
    }

    // Hamburger Lines are added to button using a nested span and pseudo elements.
    & > span {
      position: relative;
      flex: none;
      width: 100%;
      max-width: 3rem;
      height: .3rem;
      background: #fff;
      transition: transform .4s ease;

      /* Hamburger Lines - Top & Bottom */
      &::after,
      &::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: -.9rem;
        left: 0;
        width: 100%;
        height: .3rem;
        background: inherit;
      }

      /* Moves Line Down */
      &::after {
        top: .9rem;
      }
    }

    // Hamburger lines animate into a X close symbol when menu is opened.
    &[aria-expanded='true'] {
      position: relative;

      > span {
        transform: rotate(135deg);

        /* Turns Lines Into X */
        &::before,
        &::after {
          top: 0;
          transform: rotate(90deg);
        }
      }
    }

    // Hamburger X close symbol does partial rotation on hover.
    &[aria-expanded='true']:hover > span {
      transform: rotate(225deg);
    }

    // Show or hide main nav depending on the state of the hamburger.
    // @see src/js/main-menu-toggle.js.
    &:not([hidden]) ~ .nav-main {
      width: 0;
      height: 0;
      overflow: hidden;
      visibility: hidden;
      opacity: 0;
      transition: opacity .3s ease;

      // Except on larger screens - the main nav must be shown.
      @include breakpoint($tab) {
        width: 100%;
        height: auto;
        overflow: visible;
        visibility: visible;
        opacity: 1;
      }
    }

    // Show main nav when the hamburger aria-expanded attribute is true.
    &[aria-expanded='true'] ~ .nav-main,
    .main-nav:focus-within {
      width: 100%;
      height: auto;
      overflow: visible;
      visibility: visible;
      opacity: 1;
    }
  }
}
